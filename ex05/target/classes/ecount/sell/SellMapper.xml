<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ecount.sell.mapper.SellMapper">

	<select id="getList" resultType="ecount.sell.domain.Sell">
		select * from sell where order by created_at desc
	</select>
	<!-- 1개의 sell 데이터와 연관된 product데이터들 조회 -->
	<select id="getOneOfSellProducts" resultType="ecount.sell.domain.ProductItemPrice">
		<![CDATA[
		select m.uuid, 
        		m.productnum, 
        		(
        		select p.name from products p 
        		where productcode = 
        			(select spm.productcode from product_mapping spm where spm.productnum = m.productnum and rownum =1)
        		)as first_product,
        
        		count(pm.productcode) as count ,
        		sum(p.numberofitem*p.unitprice) as total_price 
		FROM sell s
    	JOIN 
        	mappingtable m ON s.acc_uuid = m.uuid
    	JOIN 
        	product_mapping pm ON m.productnum = pm.productnum
    	JOIN 
        	products p ON pm.productcode = p.productcode  
		group by  m.uuid, m.productnum, s.acc_uuid
		]]>
	</select>
	
	<!-- 판매입력 부분 -->
	<insert id="insertSell">
		insert into sell(acc_uuid, acc_num,clientnum, managernum, storageid, projectnum, saletype, type, status, created_at, modified_at, deleted_at)
    			values(#{acc_uuid}, #{acc_num}, #{clientnum}, #{managernum}, #{storageid}, #{projectnum}, #{saletype}, #{type}, #{status}, #{created_at}, 
    					#{modified_at}, #{deleted_at})
	</insert>
	
	<!-- 판매번호와 품목목번호 저장 -->
	<insert id="insertMappingTable">
			insert into mappingtable(uuid, productnum)values(#{uuid}, #{productnum})
	</insert>
	
	<!-- 품목목록과 품목 연결테이블 데이터 저장 -->
	<insert id="insertProductMapping">
			insert into product_mapping(productnum,productcode) values(#{productnum},#{productcode})
	</insert>
	
	<!-- <select id="getProductList" resultType="ecount.common.domain.ProductList">
		select * from tbl_reply where rno = #{rno}
	</select> -->
	
<!-- 	<select id="getListWithPaging" resultType="org.zerock.domain.ReplyVO">
		<![CDATA[
		select rno, bno, reply, replyer, replydate, updatedate
		from
		(
			select /*+INDEX(tbl_reply idx_reply) */
			rownum rn, rno, bno, reply, replyer, replydate, updatedate 
			from tbl_reply 
			where bno = #{bno}
			and rno > 0
			and rownum <= #{cri.pageNum} * #{cri.amount}
		) where rn > (#{cri.pageNum} - 1) * #{cri.amount}
		]]>
		
	</select> -->


	
	
</mapper>